2017年11月18日：
	上一次我使用了暴力算法，但是很明显——虽然说理论上来讲没有错误，但是计算量太大了。9的81次方分之一的概率算对。这辈子就算了吧。
	现在我打算尝试用另一种Approach。与其随机填充，我们不如当一个格子板上钉钉了再赋值。
	我要脱离暴力算法，我要尝试智能——用人的思维来做。
	回忆一下我自己做数独，不都是这样的吗——一定要百分之百确定了之后才能写上去。我要将同样的思维运用到我的算法设计中去。这样写的好处有很多——计算量相对来说就要小很多了。
	虽然说每一个格子需要试九次同样的测试流程的，但是至少比另一个效率要高。
	另一个好处就是可扩展性。我每次想出一种新的方法的时候只需要扩展一个确定条件就可以了，这种极易扩展的结构非常灵活，非常适合我的需求。
	但是我要先测试一下，每一种确定的算法都到底能到什么程度。
	也就是说，分不同级别的。比如说我一开始设计的最初的算法只能够做简单模式的，但是随着算法库的扩展，可以解决更高难度的。
	现在我要做的就是测试一下，到底能不能仅仅凭“第一原则”就完成数独——哪怕最简单的也可以。其他的想法我都有，但是不太好用代码实现，先试试看“第一原则”把。
	之前的框架可以留着，没什么技术含量。

框架：
1. 用二维数组完成矩阵（没的讲）
2. 但是数据类型要自定义，不能仅仅是int
3. 每个格子里头要有自身的坐标和数据
4. 可以用一个嵌套循环加上构造器创建每一个格子
小思路：
1. 搜索整个矩阵（判断条件要加一个没有被涂黑），一旦发现要寻找的数字（用一个循环完成九个数字的搜索）马上涂黑所有该Row和该Column和该Block的数据
2. 大循环：当没有格子的状态为0的时候就可以了
所有还是0的格子在一个数字检查完之后重置状态为Editable

MarkUp方法：一旦发现要寻找的数字（用一个循环完成九个数字的搜索）马上涂黑所有该Row和该Column和该Block的数据
MarkUp用完之后再开始填充
Video logs are too large in size to be uploaded.